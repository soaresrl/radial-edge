"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const model_1 = require("./red/model");
const mmr_1 = require("./red/operators/mmr");
const msv_1 = require("./red/operators/msv");
const region_1 = require("./red/region");
const shell_1 = require("./red/shell");
const vertex_1 = require("./red/vertex");
const mrsfl_1 = require("./red/operators/mrsfl");
const face_1 = require("./red/face");
const loop_1 = require("./red/loop");
const point_1 = require("./geo/point");
const mmev_1 = require("./red/operators/mmev");
const definitions_1 = require("./red/definitions");
const edge_1 = require("./red/edge");
const mme_1 = require("./red/operators/mme");
const obj_1 = require("./io/obj");
// const modelOperations = new DoublyLinkedList<Operator>();
const model = new model_1.default();
const region1 = new region_1.default();
const mmr = new mmr_1.default(model, region1);
// modelOperations.add(mmr);
mmr.execute();
const shell1 = new shell_1.default(region1);
const vertex1 = new vertex_1.default(new point_1.default(0, 0, 1));
const vertex2 = new vertex_1.default(new point_1.default(1, 0, 0));
const vertex3 = new vertex_1.default(new point_1.default(0, 0, 0));
const vertex4 = new vertex_1.default(new point_1.default(0, 1, 0));
const msv = new msv_1.default(region1, shell1, vertex1);
// const msv1 = new MSV(region, new Shell(region), new Vertex());
// modelOperations.add(msv);
// modelOperations.add(msv1);
msv.execute();
const region2 = new region_1.default();
const shell2 = new shell_1.default(region2);
const face1 = new face_1.default();
const face2 = new face_1.default();
const face3 = new face_1.default();
const face4 = new face_1.default();
const loop1 = new loop_1.default();
const loop2 = new loop_1.default();
const loop3 = new loop_1.default();
const loop4 = new loop_1.default();
const mrsfl = new mrsfl_1.default(vertex1, region1, region2, shell2, face1, loop1);
// modelOperations.add(mrsfl);
mrsfl.execute();
const edge1 = new edge_1.default();
const edge2 = new edge_1.default();
const edge3 = new edge_1.default();
const edge4 = new edge_1.default();
const edge5 = new edge_1.default();
const edge6 = new edge_1.default();
const mmev1 = new mmev_1.default(vertex1, null, definitions_1.Direction.CCW, face1, definitions_1.Orientation.UNSPECIFIED, edge1, vertex4);
const mmev2 = new mmev_1.default(vertex4, edge1, definitions_1.Direction.CCW, face1, definitions_1.Orientation.OUTSIDE, edge4, vertex2);
const mme1 = new mme_1.default(vertex1, edge1, definitions_1.Direction.CCW, vertex2, edge4, definitions_1.Direction.CCW, face1, definitions_1.Orientation.INSIDE, edge3, face2, loop2); // I think it should be OUTSIDE
const mmev3 = new mmev_1.default(vertex2, edge3, definitions_1.Direction.CCW, face1, definitions_1.Orientation.OUTSIDE, edge5, vertex3);
const mme2 = new mme_1.default(vertex3, edge5, definitions_1.Direction.CW, vertex1, edge3, definitions_1.Direction.CW, face1, definitions_1.Orientation.OUTSIDE, edge2, face3, loop3);
const mme3 = new mme_1.default(vertex3, edge5, definitions_1.Direction.CW, vertex4, edge4, definitions_1.Direction.CCW, face3, definitions_1.Orientation.OUTSIDE, edge6, face4, loop4);
mmev1.execute();
mmev2.execute();
mme1.execute();
mmev3.execute();
mme2.execute(); // parei aqui
mme3.execute();
const exporter = new obj_1.default(model);
exporter.write("examples/output.obj");
// msv1.execute();
// modelOperations.last!.data.unexecute();
// modelOperations.last!.data.execute();
// console.log("After unexecute");
//# sourceMappingURL=main.js.map